(function(a,S){typeof exports=="object"&&typeof module<"u"?S(exports,require("@dzangolab/fastify-mercurius"),require("fastify-plugin"),require("mercurius"),require("mercurius-auth"),require("@fastify/cors"),require("@fastify/formbody"),require("supertokens-node"),require("supertokens-node/framework/fastify"),require("supertokens-node/recipe/session/framework/fastify"),require("supertokens-node/recipe/session"),require("supertokens-node/recipe/thirdpartyemailpassword"),require("supertokens-node/recipe/userroles"),require("@dzangolab/fastify-slonik"),require("@dzangolab/fastify-mailer")):typeof define=="function"&&define.amd?define(["exports","@dzangolab/fastify-mercurius","fastify-plugin","mercurius","mercurius-auth","@fastify/cors","@fastify/formbody","supertokens-node","supertokens-node/framework/fastify","supertokens-node/recipe/session/framework/fastify","supertokens-node/recipe/session","supertokens-node/recipe/thirdpartyemailpassword","supertokens-node/recipe/userroles","@dzangolab/fastify-slonik","@dzangolab/fastify-mailer"],S):(a=typeof globalThis<"u"?globalThis:a||self,S(a.DzangolabFastifyUser={},a.DzangolabFastifyMercurius,a.FastifyPlugin,a.Mercurius,a.MercuriusAuth,a.FastifyCors,a.FastifyFormbody,a.SupertokensNode,a.SupertokensFastify,a.SupertokensSessionFastify,a.SupertokensSession,a.SupertokensThirdPartyEmailPassword,a.SupertokensUserRoles,a.DzangolabFastifySlonik))})(this,function(a,S,y,P,E,I,D,v,U,b,h,d,l,R){"use strict";const N=y(async e=>{e.config.mercurius.enabled&&e.register(E,{async applyPolicy(r,n,o,t){if(!t.user){const i=new P.ErrorWithProps("unauthorized");return i.statusCode=200,i}return!0},authDirective:"auth"})}),F=()=>({override:{functions:function(e){return{...e,createNewSession:async function(s){return s.accessTokenPayload={...s.accessTokenPayload,user:await d.getUserById(s.userId)},e.createNewSession(s)}}}}}),C=e=>{const s=e.config.user.supertokens.recipes;return s&&s.session?h.init(s.session(e)):h.init(F())};class _ extends R.DefaultSqlFactory{}class g extends R.BaseService{static LIMIT_DEFAULT=20;static LIMIT_MAX=50;get table(){return this.config.user?.table?.name||"users"}get factory(){if(!this.table)throw new Error("Service table is not defined");return this._factory||(this._factory=new _(this)),this._factory}}const L=(e,s)=>{const{config:r,slonik:n}=s;return async o=>{const t=await e.emailPasswordSignIn(o);if(t.status!=="OK")return t;const i=new g(r,n);let u=null;try{u=await i.findById(t.user.id)}catch{}const{roles:c}=await l.getRolesForUser(t.user.id);return{status:"OK",user:{...t.user,profile:u,roles:c}}}},k=async({fastify:e,subject:s,templateData:r={},templateName:n,to:o})=>{const{config:t,mailer:i,log:u}=e;return i.sendMail({subject:s,templateName:n,to:o,templateData:{appName:t.appName,...r}}).catch(c=>{throw u.error(c.stack),{name:"SEND_EMAIL",message:c.message,statusCode:500}})},T=(e,s)=>{const{config:r,log:n}=s;return async o=>{if(r.user.features?.signUp===!1)throw{name:"SIGN_UP_DISABLED",message:"SignUp feature is currently disabled",statusCode:404};const t=await e.emailPasswordSignUp(o);if(r.user.supertokens.sendUserAlreadyExistsWarning&&t.status==="EMAIL_ALREADY_EXISTS_ERROR")try{await k({fastify:s,subject:"Duplicate Email Registration",templateData:{emailId:o.email},templateName:"duplicate-email-warning",to:o.email})}catch(i){n.error(i)}return t}},A=(e,s)=>{const{log:r,config:n}=s;return async o=>{if(e.emailPasswordSignUpPOST===void 0)throw new Error("Should never come here");const t=await e.emailPasswordSignUpPOST(o);if(t.status==="OK"){const i=await l.addRoleToUser(t.user.id,n.user.role||"USER");i.status!=="OK"&&r.error(i.status);const{roles:u}=await l.getRolesForUser(t.user.id);return{status:"OK",user:{...t.user,profile:null,roles:u},session:t.session}}return t}},B=e=>{const{config:s}=e,r=s.appOrigin[0],n="/reset-password";return async o=>{await k({fastify:e,subject:"Reset Password",templateName:"reset-password",to:o.user.email,templateData:{passwordResetLink:o.passwordResetLink.replace(r+"/auth/reset-password",r+(s.user.supertokens.resetPasswordPath?s.user.supertokens.resetPasswordPath:n))}})}},M=(e,s)=>{const{config:r}=s;return async n=>{if(!await d.getUserByThirdPartyInfo(n.thirdPartyId,n.thirdPartyUserId,n.userContext)&&r.user.features?.signUp===!1)throw{name:"SIGN_UP_DISABLED",message:"SignUp feature is currently disabled",statusCode:404};return await e.thirdPartySignInUp(n)}},q=(e,s)=>{const{log:r,config:n}=s;return async o=>{if(e.thirdPartySignInUpPOST===void 0)throw new Error("Should never come here");const t=await e.thirdPartySignInUpPOST(o);if(t.status==="OK"&&t.createdNewUser){const i=await l.addRoleToUser(t.user.id,n.user.role||"USER");i.status!=="OK"&&r.error(i.status);const{roles:u}=await l.getRolesForUser(t.user.id),c={...t.user,profile:null,roles:u};return{status:"OK",createdNewUser:t.createdNewUser,user:c,session:t.session,authCodeResponse:t.authCodeResponse}}return t}},z=e=>{const{Apple:s,Facebook:r,Github:n,Google:o}=d,t=e.user.supertokens.providers,i=[],u=[{name:"google",initProvider:o},{name:"github",initProvider:n},{name:"facebook",initProvider:r},{name:"apple",initProvider:s}];for(const c of u)t?.[c.name]&&i.push(c.initProvider(t[c.name]));return i},K=(e,s)=>{const r=e.split("@")?.[1];return r?!!s.includes(r):!1},$=e=>{const{config:s}=e;return{override:{apis:r=>({...r,emailPasswordSignUpPOST:A(r,e),thirdPartySignInUpPOST:q(r,e)}),functions:r=>({...r,emailPasswordSignIn:L(r,e),emailPasswordSignUp:T(r,e),thirdPartySignInUp:M(r,e)})},signUpFeature:{formFields:[{id:"email",validate:async r=>{const n=/^([\w+.]+)(\w)(@)(\w+)(\.\w+)+$/,o=s.user.supertokens.supportedEmailDomains;if(!n.test(r))return"Email is invalid";if(o&&o.filter(t=>!!t).length!==0&&!K(r,s.user.supertokens.supportedEmailDomains))return"Unsupported Email Domain"}}]},emailDelivery:{override:r=>({...r,sendEmail:B(e)})},providers:z(s)}},H=e=>{const s=e.config.user.supertokens.recipes;return s&&s.thirdPartyEmailPassword?d.init(s.thirdPartyEmailPassword(e)):d.init($(e))},J=()=>({}),V=e=>{const s=e.config.user.supertokens.recipes;return s&&s.userRoles?l.init(s.userRoles(e)):l.init(J())},W=e=>[C(e),H(e),V(e)],G=e=>{const{config:s}=e;v.init({appInfo:{apiDomain:s.baseUrl,appName:s.appName,websiteDomain:s.appOrigin[0]},recipeList:W(e),supertokens:{connectionURI:s.user.supertokens.connectionUri}})},Q=y(async(e,s,r)=>{const{config:n,log:o}=e;o.info("Registering supertokens plugin"),G(e),e.setErrorHandler(U.errorHandler()),e.register(I,{origin:n.appOrigin,allowedHeaders:["Content-Type","st-auth-mode",...v.getAllCORSHeaders()],credentials:!0}),e.register(D),e.register(U.plugin),o.info("Registering supertokens plugin complete"),e.decorate("verifySession",b.verifySession),r()}),j=async(e,s,r)=>{const{config:n,slonik:o}=s,i=(await h.getSession(s,U.wrapResponse(r),{sessionRequired:!1}))?.getUserId();if(i){const u=new g(n,o),c=await d.getUserById(i);if(c){let p=null;const{roles:w}=await l.getRolesForUser(i);try{p=await u.findById(i)}catch{}const m={...c,profile:p,roles:w};e.user=m}}},O=y(async(e,s,r)=>{const{mercurius:n}=e.config;await e.register(Q),n.enabled&&await e.register(N),r()});O.updateContext=j;const X={Query:{user:async(e,s,r)=>await new g(r.config,r.database).findById(s.id),users:async(e,s,r)=>await new g(r.config,r.database).list(s.limit,s.offset,s.filters?JSON.parse(JSON.stringify(s.filters)):void 0,s.sort?JSON.parse(JSON.stringify(s.sort)):void 0)}},Y=async(e,s,r)=>{const n="/users";e.get(n,{preHandler:e.verifySession()},async(o,t)=>{const i=new g(o.config,o.slonik),{limit:u,offset:c,filters:p,sort:w}=o.query,m=await i.list(u,c,p?JSON.parse(p):void 0,w?JSON.parse(w):void 0);t.send(m)}),r()};class f{config;database;constructor(s,r){this.config=s,this.database=r}changePassword=async(s,r,n)=>{const o=await d.getUserById(s),t=/^(?=.*?[a-z]).{8,}$/,i=/^(?=.*?\d).{8,}$/;if(!/^.{8,}$/.test(n))return{status:"FIELD_ERROR",message:"Password must contain at least 8 characters"};if(!t.test(n))return{status:"FIELD_ERROR",message:"Password must contain at least one lower case alphabet"};if(!i.test(n))return{status:"FIELD_ERROR",message:"Password must contain at least one number"};if(r&&n)if(o)if((await d.emailPasswordSignIn(o.email,r)).status==="OK"){if(await d.updateEmailOrPassword({userId:s,password:n}))return await h.revokeAllSessionsForUser(s),{status:"OK"};throw{status:"FAILED",message:"Oops! Something went wrong, couldn't change password"}}else return{status:"INVALID_PASSWORD",message:"Invalid password"};else throw{status:"NOT_FOUND",message:"User not found"};else return{status:"FIELD_ERROR",message:"Password cannot be empty"}};getUserById=async s=>{const r=await d.getUserById(s),n=new g(this.config,this.database);let o=null;try{o=await n.findById(s)}catch{}const t=await l.getRolesForUser(s);return{email:r?.email,id:s,profile:o,roles:t.roles,timeJoined:r?.timeJoined}}}const Z={Mutation:{changePassword:async(e,s,r)=>{const n=new f(r.config,r.database);try{return r.user?.id?await n.changePassword(r.user?.id,s.oldPassword,s.newPassword):{status:"NOT_FOUND",message:"User not found"}}catch(o){r.app.log.error(o);const t=new P.ErrorWithProps("Oops, Something went wrong");return t.statusCode=500,t}}},Query:{me:async(e,s,r)=>{const n=new f(r.config,r.database);if(r.user?.id)return n.getUserById(r.user.id);{r.app.log.error("Cound not get user id from mercurius context");const o=new P.ErrorWithProps("Oops, Something went wrong");return o.statusCode=500,o}}}},x=async(e,s,r)=>{const n="/change_password",o="/me";e.post(n,{preHandler:e.verifySession()},async(t,i)=>{try{const u=t.session,c=t.body,p=u&&u.getUserId();if(!p)throw new Error("User not found in session");const w=c.oldPassword??"",m=c.newPassword??"",ee=await new f(t.config,t.slonik).changePassword(p,w,m);i.send(ee)}catch(u){e.log.error(u),i.status(500),i.send({status:"ERROR",message:"Oops! Something went wrong",error:u})}}),e.get(o,{preHandler:e.verifySession()},async(t,i)=>{const u=new f(t.config,t.slonik),c=t.session?.getUserId();if(c)i.send(await u.getUserById(c));else throw e.log.error("Cound not get user id from session"),new Error("Oops, Something went wrong")}),r()};a.UserProfileService=g,a.UserService=f,a.default=O,a.userProfileResolver=X,a.userProfileRoutes=Y,a.userResolver=Z,a.userRoutes=x,Object.defineProperties(a,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
