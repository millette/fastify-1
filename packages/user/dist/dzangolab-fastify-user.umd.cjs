(function(c,m){typeof exports=="object"&&typeof module<"u"?m(exports,require("@dzangolab/fastify-mercurius"),require("fastify-plugin"),require("mercurius"),require("mercurius-auth"),require("@fastify/cors"),require("@fastify/formbody"),require("supertokens-node"),require("supertokens-node/framework/fastify"),require("supertokens-node/recipe/session/framework/fastify"),require("supertokens-node/recipe/session"),require("supertokens-node/recipe/thirdpartyemailpassword"),require("@dzangolab/fastify-slonik"),require("supertokens-node/recipe/userroles"),require("@dzangolab/fastify-mailer"),require("validator"),require("zod")):typeof define=="function"&&define.amd?define(["exports","@dzangolab/fastify-mercurius","fastify-plugin","mercurius","mercurius-auth","@fastify/cors","@fastify/formbody","supertokens-node","supertokens-node/framework/fastify","supertokens-node/recipe/session/framework/fastify","supertokens-node/recipe/session","supertokens-node/recipe/thirdpartyemailpassword","@dzangolab/fastify-slonik","supertokens-node/recipe/userroles","@dzangolab/fastify-mailer","validator","zod"],m):(c=typeof globalThis<"u"?globalThis:c||self,m(c.DzangolabFastifyUser={},c.DzangolabFastifyMercurius,c.FastifyPlugin,c.Mercurius,c.MercuriusAuth,c.FastifyCors,c.FastifyFormbody,c.SupertokensNode,c.SupertokensFastify,c.SupertokensSessionFastify,c.SupertokensSession,c.SupertokensThirdPartyEmailPassword,c.DzangolabFastifySlonik,c.SupertokensUserRoles,c.DzangolabFastifyMailer,c.validator,c.zod))})(this,function(c,m,U,v,N,C,L,k,E,q,f,p,w,g,le,R,b){"use strict";const A=U(async e=>{e.config.mercurius.enabled&&e.register(N,{async applyPolicy(r,i,n,o){if(!o.user){const t=new v.ErrorWithProps("unauthorized");return t.statusCode=200,t}return!0},authDirective:"auth"})}),M=()=>({}),T=e=>{const s=e.config.user.supertokens.recipes;return s&&s.session?f.init(s.session(e)):f.init(M())};let $=class extends w.DefaultSqlFactory{};class h extends w.BaseService{static LIMIT_DEFAULT=20;static LIMIT_MAX=50;get table(){return this.config.user?.table?.name||"users"}get factory(){if(!this.table)throw new Error("Service table is not defined");return this._factory||(this._factory=new $(this)),this._factory}}const z=(e,s)=>{const{config:r,log:i,slonik:n}=s;return async o=>{const t=await e.emailPasswordSignIn(o);if(t.status!=="OK")return t;const a=new h(r,n);let u;try{u=await a.update(t.user.id,{last_login_at:Date.now()})}catch{if(u=await a.create({id:t.user.id,email:t.user.email,signed_up_at:t.user.timeJoined,last_login_at:t.user.timeJoined}),!u)throw i.error(`Unable to create user ${t.user.id}`),new Error(`Unable to create user ${t.user.id}`)}return{status:"OK",user:{...t.user,...u}}}},O=async({fastify:e,subject:s,templateData:r={},templateName:i,to:n})=>{const{config:o,mailer:t,log:a}=e;return t.sendMail({subject:s,templateName:i,to:n,templateData:{appName:o.appName,...r}}).catch(u=>{throw a.error(u.stack),{name:"SEND_EMAIL",message:u.message,statusCode:500}})},J=(e,s)=>{const{config:r,log:i,slonik:n}=s;return async o=>{if(r.user.features?.signUp===!1)throw{name:"SIGN_UP_DISABLED",message:"SignUp feature is currently disabled",statusCode:404};const t=await e.emailPasswordSignUp(o);if(t.status==="OK"){const u=await new h(r,n).create({id:t.user.id,email:t.user.email,signed_up_at:t.user.timeJoined,last_login_at:t.user.timeJoined});if(!u)throw i.error(`Unable to create user ${t.user.id}`),new Error(`Unable to create user ${t.user.id}`);t.user={...t.user,...u};const d=await g.addRoleToUser(t.user.id,r.user.role||"USER");d.status!=="OK"&&i.error(d.status)}if(r.user.supertokens.sendUserAlreadyExistsWarning&&t.status==="EMAIL_ALREADY_EXISTS_ERROR")try{await O({fastify:s,subject:"Duplicate Email Registration",templateData:{emailId:o.email},templateName:"duplicate-email-warning",to:o.email})}catch(a){i.error(a)}return t}},B=(e,s)=>b.z.string({required_error:e.required}).refine(r=>R.isEmail(r,s||{}),{message:e.invalid}),_={minLength:8,minLowercase:0,minUppercase:0,minNumbers:0,minSymbols:0,returnScore:!1,pointsPerUnique:1,pointsPerRepeat:.5,pointsForContainingLower:10,pointsForContainingUpper:10,pointsForContainingNumber:10,pointsForContainingSymbol:10},K=(e,s)=>{const r={..._,...s};return b.z.string({required_error:e.required}).refine(i=>R.isStrongPassword(i,r),{message:e.weak})},H=(e,s)=>{const r=B({invalid:"Email is invalid",required:"Email is required"},s.user.email).safeParse(e);return r.success?{success:!0}:{message:r.error.issues[0].message,success:!1}},W=e=>{let s="Password is too weak";if(!e)return s;const r=[];if(e.minLength){const i=e.minLength;r.push(`minimum ${i} ${i>1?"characters":"character"}`)}if(e.minLowercase){const i=e.minLowercase;r.push(`minimum ${i} ${i>1?"lowercases":"lowercase"}`)}if(e.minUppercase){const i=e.minUppercase;r.push(`minimum ${i} ${i>1?"uppercases":"uppercase"}`)}if(e.minNumbers){const i=e.minNumbers;r.push(`minimum ${i} ${i>1?"numbers":"number"}`)}if(e.minSymbols){const i=e.minSymbols;r.push(`minimum ${i} ${i>1?"symbols":"symbol"}`)}if(r.length>0){s="Password should contain ";const i=r.pop();r.length>0&&(s+=r.join(", ")+" and "),s+=i}return s},I=(e,s)=>{const r=s.user.password,i=K({required:"Password is required",weak:W({..._,...r})},r).safeParse(e);return i.success?{success:!0}:{message:i.error.issues[0].message,success:!1}},j=e=>[{id:"email",validate:async s=>{const r=H(s,e);if(!r.success)return r.message}},{id:"password",validate:async s=>{const r=I(s,e);if(!r.success)return r.message}}],G=e=>{let s=[];if(typeof e.user.supertokens?.recipes?.thirdPartyEmailPassword=="object"){const i=e.user.supertokens?.recipes?.thirdPartyEmailPassword.signUpFeature?.formFields;i&&(s=[...i])}const r=new Set(s.map(i=>i.id));for(const i of j(e))r.has(i.id)||s.push(i);return s},V=e=>{let s;try{if(s=new URL(e).origin,!s||s==="null")throw new Error("Origin is empty")}catch{s=""}return s},X=(e,s)=>{const r=s.config.appOrigin[0],i="/reset-password";return async n=>{const o=n.userContext._default.request.request,t=o.headers.referer||o.headers.origin||o.hostname,a=V(t)||r,u=n.passwordResetLink.replace(r+"/auth/reset-password",a+(s.config.user.supertokens.resetPasswordPath||i));await O({fastify:s,subject:"Reset Password",templateName:"reset-password",to:n.user.email,templateData:{passwordResetLink:u}})}},Q=(e,s)=>{const{config:r,log:i}=s;return async n=>{if(!await p.getUserByThirdPartyInfo(n.thirdPartyId,n.thirdPartyUserId,n.userContext)&&r.user.features?.signUp===!1)throw{name:"SIGN_UP_DISABLED",message:"SignUp feature is currently disabled",statusCode:404};const t=await e.thirdPartySignInUp(n);if(t.status==="OK"&&t.createdNewUser){const a=await g.addRoleToUser(t.user.id,r.user.role||"USER");a.status!=="OK"&&i.error(a.status)}return t}},Y=(e,s)=>{const{config:r,log:i,slonik:n}=s;return async o=>{if(e.thirdPartySignInUpPOST===void 0)throw new Error("Should never come here");const t=await e.thirdPartySignInUpPOST(o);if(t.status==="OK"){const a=new h(r,n);let u;try{u=await(t.createdNewUser?a.create({id:t.user.id,email:t.user.email,signed_up_at:t.user.timeJoined,last_login_at:t.user.timeJoined}):a.update(t.user.id,{last_login_at:Date.now()}))}catch{if(!u)throw i.error(`Unable to create user ${t.user.id}`),new Error(`Unable to create user ${t.user.id}`)}return{status:"OK",createdNewUser:t.createdNewUser,user:{...t.user,...u},session:t.session,authCodeResponse:t.authCodeResponse}}return t}},Z=e=>{const{Apple:s,Facebook:r,Github:i,Google:n}=p,o=e.user.supertokens.providers,t=[],a=[{name:"google",initProvider:n},{name:"github",initProvider:i},{name:"facebook",initProvider:r},{name:"apple",initProvider:s}];for(const u of a)o?.[u.name]&&t.push(u.initProvider(o[u.name]));return t},x=e=>{const{config:s}=e;let r={};return typeof s.user.supertokens.recipes?.thirdPartyEmailPassword=="object"&&(r=s.user.supertokens.recipes.thirdPartyEmailPassword),{override:{apis:i=>{const n={};if(r.override?.apis){const o=r.override.apis;let t;for(t in o){const a=o[t];a&&(n[t]=a(i,e))}}return{...i,thirdPartySignInUpPOST:Y(i,e),...n}},functions:i=>{const n={};if(r.override?.functions){const o=r.override.functions;let t;for(t in o){const a=o[t];a&&(n[t]=a(i,e))}}return{...i,emailPasswordSignIn:z(i,e),emailPasswordSignUp:J(i,e),thirdPartySignInUp:Q(i,e),...n}}},signUpFeature:{formFields:G(s)},emailDelivery:{override:i=>{let n;return r?.sendEmail&&(n=r.sendEmail),{...i,sendEmail:n?n(i,e):X(i,e)}}},providers:Z(s)}},ee=e=>{const s=e.config.user.supertokens.recipes?.thirdPartyEmailPassword;return typeof s=="function"?p.init(s(e)):p.init(x(e))},se=()=>({}),re=e=>{const s=e.config.user.supertokens.recipes;return s&&s.userRoles?g.init(s.userRoles(e)):g.init(se())},te=e=>[T(e),ee(e),re(e)],ie=e=>{const{config:s}=e;k.init({appInfo:{apiDomain:s.baseUrl,appName:s.appName,websiteDomain:s.appOrigin[0]},recipeList:te(e),supertokens:{connectionURI:s.user.supertokens.connectionUri}})},ne=U(async(e,s,r)=>{const{config:i,log:n}=e;n.info("Registering supertokens plugin"),ie(e),e.setErrorHandler(E.errorHandler()),e.register(C,{origin:i.appOrigin,allowedHeaders:["Content-Type","st-auth-mode",...k.getAllCORSHeaders()],credentials:!0}),e.register(L),e.register(E.plugin),n.info("Registering supertokens plugin complete"),e.decorate("verifySession",q.verifySession),r()}),oe=async(e,s,r)=>{const{config:i,slonik:n}=s,t=(await f.getSession(s,E.wrapResponse(r),{sessionRequired:!1}))?.getUserId();if(t){const a=new h(i,n);let u=null;try{u=await a.findById(t)}catch{}if(!u)throw new Error("Unable to find user");const{roles:d}=await g.getRolesForUser(t);e.user=u,e.roles=d}},F=U(async(e,s,r)=>{const{mercurius:i}=e.config;await e.register(ne),i.enabled&&await e.register(A),r()});F.updateContext=oe;class ae extends w.DefaultSqlFactory{}class l extends w.BaseService{constructor(s,r){super(s,r)}static LIMIT_DEFAULT=20;static LIMIT_MAX=50;get table(){return this.config.user?.table?.name||"users"}get factory(){if(!this.table)throw new Error("Service table is not defined");return this._factory||(this._factory=new ae(this)),this._factory}changePassword=async(s,r,i)=>{const n=I(i,this.config);if(!n.success)return{status:"FIELD_ERROR",message:n.message};const o=await p.getUserById(s);if(r&&i)if(o)if((await p.emailPasswordSignIn(o.email,r)).status==="OK"){if(await p.updateEmailOrPassword({userId:s,password:i}))return await f.revokeAllSessionsForUser(s),{status:"OK"};throw{status:"FAILED",message:"Oops! Something went wrong, couldn't change password"}}else return{status:"INVALID_PASSWORD",message:"Invalid password"};else throw{status:"NOT_FOUND",message:"User not found"};else return{status:"FIELD_ERROR",message:"Password cannot be empty"}}}const ue={Mutation:{changePassword:async(e,s,r)=>{const i=new l(r.config,r.database);try{return r.user?.id?await i.changePassword(r.user?.id,s.oldPassword,s.newPassword):{status:"NOT_FOUND",message:"User not found"}}catch(n){r.app.log.error(n);const o=new v.ErrorWithProps("Oops, Something went wrong");return o.statusCode=500,o}}},Query:{me:async(e,s,r)=>{const i=new l(r.config,r.database);if(r.user?.id)return i.findById(r.user.id);{r.app.log.error("Could not able to get user id from mercurius context");const n=new v.ErrorWithProps("Oops, Something went wrong");return n.statusCode=500,n}},user:async(e,s,r)=>await new l(r.config,r.database).findById(s.id),users:async(e,s,r)=>await new l(r.config,r.database).list(s.limit,s.offset,s.filters?JSON.parse(JSON.stringify(s.filters)):void 0,s.sort?JSON.parse(JSON.stringify(s.sort)):void 0)}},ce=async(e,s,r)=>{const i="/change_password",n="/me",o="/users";e.get(o,{preHandler:e.verifySession()},async(t,a)=>{const u=new l(t.config,t.slonik),{limit:d,offset:y,filters:S,sort:P}=t.query,D=await u.list(d,y,S?JSON.parse(S):void 0,P?JSON.parse(P):void 0);a.send(D)}),e.post(i,{preHandler:e.verifySession()},async(t,a)=>{try{const u=t.session,d=t.body,y=u&&u.getUserId();if(!y)throw new Error("User not found in session");const S=d.oldPassword??"",P=d.newPassword??"",de=await new l(t.config,t.slonik).changePassword(y,S,P);a.send(de)}catch(u){e.log.error(u),a.status(500),a.send({status:"ERROR",message:"Oops! Something went wrong",error:u})}}),e.get(n,{preHandler:e.verifySession()},async(t,a)=>{const u=new l(t.config,t.slonik),d=t.session?.getUserId();if(d)a.send(await u.findById(d));else throw e.log.error("Could not able to get user id from session"),new Error("Oops, Something went wrong")}),r()};c.UserService=l,c.default=F,c.userResolver=ue,c.userRoutes=ce,Object.defineProperties(c,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
